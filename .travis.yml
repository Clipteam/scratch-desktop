matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      before_script:
        - export CSC_IDENTITY_AUTO_DISCOVERY=false
    - os: linux
      dist: bonic
      services: docker
      language: node_js
      node_js: "10"

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_install:
  - npm install -g cross-env
  - git clone https://github.com/Clipteam/clipcc-gui.git ../clipcc-gui

install:
  - cd ../clipcc-gui
  - yarn
  - cd ../clipcc-desktop
  - yarn

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      touch clipcc-desktop.env
      env | grep -vE '\r|\n' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|TRAVIS|CSC_|_TOKEN|_KEY|BUILD_' > ./clipcc-desktop.env
      cat clipcc-desktop.env
      sudo docker run --rm \
        --env-file ./clipcc-desktop.env \
        -v ${PWD}:/clipcc-desktop \
        -v ${PWD}/../clipcc-gui:/clipcc-gui \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "apt-get install -y wget unzip fontconfig locales \
            gconf-service libasound2 libatk1.0-0 libc6 libcairo2 \
            libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 \
            libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 \
            libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 \
            libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 \
            libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 \
            libnss3 lsb-release xdg-utils wget rpm libxcomposite1 \
          && cd /clipcc-gui && yarn link \
          && ldd /clipcc-desktop/node_modules/electron/dist/electron \
          && cd /clipcc-desktop && yarn link clipcc-gui \
          && cd ./node_modules/clipcc-gui \
          && BUILD_MODE=dist STATIC_PATH=static yarn run build \
          && cd /clipcc-desktop && yarn run compile && yarn run builder --linux --win"
    else
      cd ../clipcc-gui
      yarn link
      cd ../clipcc-desktop
      yarn link clipcc-gui
      yarn run dist
    fi

deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file_glob: true
  file:
    - dist/*.zip
    - dist/*.deb
    - dist/*.rpm
    - dist/*.exe
    - dist/*.dmg
    - dist/*.pkg
  skip_cleanup: true
  on:
    tags: true
