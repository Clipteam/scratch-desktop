matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      language: node_js
      node_js: "10"
      env:
        - ELECTRON_CACHE=$HOME/.cache/electron
        - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
      before_script:
        - unset CSC_LINK
        - unset CSC_KEY_PASSWORD
        - unset CSC_NAME
        - unset CSC_KEYCHAIN
        - export CSC_IDENTITY_AUTO_DISCOVERY=false
    - os: linux
      services: docker
      language: node_js
      node_js: "10"
      before_script:
        - sudo apt-get install rpm

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

cache:
  directories:
    - node_modules
    - $HOME/.cache/electron
    - $HOME/.cache/electron-builder

before_install:
  - npm install -g cross-env
  - git clone https://github.com/Clipteam/clipcc-gui.git ../clipcc-gui

install:
  - cd ../clipcc-gui
  - yarn && yarn link
  - cd ../clipcc-desktop
  - yarn && yarn link clipcc-gui

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      touch clipcc-desktop.env
      env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|TRAVIS|CSC_|_TOKEN|_KEY|BUILD_') > ./clipcc-desktop.env
      docker run --rm \
        --env-file ./clipcc-desktop.env
        -v ${PWD}:/project -v ${PWD##*/}-node-modules:/project/node_modules \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "yarn run dist --linux --win"
    else
      yarn run dist
    fi

deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file_glob: true
  file:
    - dist/*.zip
    - dist/*.deb
    - dist/*.rpm
    - dist/*.exe
    - dist/*.dmg
    - dist/*.pkg
  skip_cleanup: true
  on:
    tags: true
